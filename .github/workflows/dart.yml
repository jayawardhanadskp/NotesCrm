name: Flutter CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  Build_Android:
    name: Build and Deploy Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "17.x"

      - name: Setup Flutter
        uses: subosito/Flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: List build folder (for debugging)
        run: ls -al build/app/outputs/flutter-apk/

      - name: Rename APK file with version and run number
        id: rename
        run: |
          VERSION_NAME="v1.0.0-${{ github.run_number }}"
          FILE_NAME="crm-$VERSION_NAME.apk"
          echo "VERSION_NAME=$VERSION_NAME" >> "$GITHUB_OUTPUT"
          echo "FILE_NAME=$FILE_NAME" >> "$GITHUB_OUTPUT"
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/$FILE_NAME

      - name: Upload APK to AWS S3 Bucket
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-north-1'
          SOURCE_DIR: 'build/app/outputs/flutter-apk'

      - name: Generate pre-signed APK URL
        id: presign
        run: |
          URL=$(aws s3 presign s3://${{ secrets.S3_BUCKET_NAME }}/${{ steps.rename.outputs.FILE_NAME }} --expires-in 86400)
          echo "PRE_SIGNED_URL=$URL" >> "$GITHUB_OUTPUT"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'eu-north-1'

      - name: Upload APK to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/flutter-apk/${{ steps.rename.outputs.FILE_NAME }}
          token: ${{ secrets.TOKEN }}
          tag: crm-${{ steps.rename.outputs.VERSION_NAME }}
          name: CRM Release ${{ steps.rename.outputs.VERSION_NAME }}
          body: |
            Automatically generated release for the **${{ github.ref_name }}** branch.
            APK: [Download](${{ steps.presign.outputs.PRE_SIGNED_URL }})
          draft: false
          prerelease: false

      - name: Notify Slack with APK URL
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"text\": \"New *${{ steps.rename.outputs.VERSION_NAME }}* CRM app APK build available:\n\n<${{ steps.presign.outputs.PRE_SIGNED_URL }}>\"
          }" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Finish CI/CD
        run: echo "Deployment complete. Slack notified, release published."
